Script started on 2022-10-29 18:42:41-04:00
[vivian@sjsu ~]$ 
[vivian@sjsu ~]$ mkdir ws8
[vivian@sjsu ~]$ 
[vivian@sjsu ~]$ cd ws8
[vivian@sjsu ws8]$ 

Q1
# Repeat worksheet #2 using awk to get the entire reviews that are verified or not. 
# Use awk to get the entire text of the verified and unverified reviews
# Redirect the "verified" true reviews to a file "verified.txt".
# Then put the unverified reviews in another file "unverified.txt" using redirection.

[vivian@sjsu ws8]$ awk -F "\t" '$12=="Y" {print $14}' ../amazon_reviews_us_Books_v1_02.tsv | head -n 10000 > verified.txt
[vivian@sjsu ws8]$ awk -F "\t" '$12=="N" {print $14}' ../amazon_reviews_us_Books_v1_02.tsv | head -n 10000 > unverified.txt


Q2
# Find the 10 most frequent words in the review_body of the verified reviews, then find the 10 most frequent 
# words in the review_body of the unverified reviews. Note: If this is taking too long for the entire dataset, 
# it is sufficient to do it just for 100 reviews so you get an idea.


# Filter out HTML tags, characters we don't care about, words less than 4 characters long
# also filter out some uninteresting 4 letter words
# -r: extended regex
[vivian@sjsu ws8]$ sed -r "s/<\w+ *\/?>//g; s/[^a-zA-Z']/ /g; s/\b[a-zA-Z']{1,3}\b//g; s/\b(this|that|with|from|what|about|they|have|more|will|would|some|there|their|which|just)\b/ /ig" verified.txt > filtered_verified.txt           
[vivian@sjsu ws8]$ sed -r "s/<\w+ *\/?>//g; s/[^a-zA-Z']/ /g; s/\b[a-zA-Z']{1,3}\b//g; s/\b(this|that|with|from|what|about|they|have|more|will|would|some|there|their|which|just)\b/ /ig" unverified.txt > filtered_unverified.txt  


# create script to count words
[vivian@sjsu ws8]$ vi count_words_awk_script
[vivian@sjsu ws8]$ cat count_words_awk_script


{
  # NF: number of fields...iterate each word in one line
  for (i=1; i<=NF; i++)
  {
    #assigning word=i (lower case)
    word=tolower($i)
    #look up the count for word in all_words. Initial count=0 (empty)
    count=all_words[word]
    if (count == 0)
    {
      all_words[word]=1
    }
    else
    {
      all_words[word]=count + 1
    }
  }

}
#bracket{ needs to be on the same line as END, else it will give you an error
END {
  for (word in all_words)
  {
    # print word, tab, and count
    print word"\t"all_words[word]
  }
}

# count verified words and sort
[vivian@sjsu ws8]$ awk -f count_words_awk_script filtered_verified.txt | sort -k2 -nr | head -n 10 > top10_words_verified_review_body.txt
[vivian@sjsu ws8]$ cat top10_words_verified_review_body.txt
book    17833
read    5148
very    3768
good    3045
like    3034
well    2848
great   2751
books   2579
other   2547
many    2527

# count unverified words and sort
[vivian@sjsu ws8]$ awk -f count_words_awk_script filtered_unverified.txt | sort -k2 -nr | head -n 10 > top10_words_unverified_review_body.txt                                          
[vivian@sjsu ws8]$ cat top10_words_unverified_review_body.txt 
book    19647
read    6130
like    4118
very    3837
story   3699
when    3266
good    3222
well    3111
time    3058
life    2914



[vivian@sjsu ws8]$ 
[vivian@sjsu ws8]$ 
[vivian@sjsu ws8]$ exit
exit

Script done on 2022-10-29 21:52:43-04:00
